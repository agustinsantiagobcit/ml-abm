
package cl.metlife.ws.clients.filenet;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ConectorFileNetWSI", targetNamespace = "http://filenet.ws.metlife.cl/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConectorFileNetWSI {


    /**
     * 
     * @param documentId
     * @return
     *     returns cl.blueprintsit.ws.filenet.Document
     */
    @WebMethod(action = "getDocumentAction")
    @WebResult(name = "Document", targetNamespace = "")
    @RequestWrapper(localName = "getDocument", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.GetDocument")
    @ResponseWrapper(localName = "getDocumentResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.GetDocumentResponse")
    public Document getDocument(
            @WebParam(name = "DocumentId", targetNamespace = "")
                    String documentId);

    /**
     *
     * @param documentId
     * @return
     *     returns java.util.List<cl.blueprintsit.ws.filenet.Metadata>
     */
    @WebMethod(action = "getMetadataAction")
    @WebResult(name = "MetadataList", targetNamespace = "")
    @RequestWrapper(localName = "getMetadata", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.GetMetadata")
    @ResponseWrapper(localName = "getMetadataResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.GetMetadataResponse")
    public List<Metadata> getMetadata(
            @WebParam(name = "DocumentId", targetNamespace = "")
                    String documentId);

    /**
     *
     * @param document
     * @param businessDocumentId
     * @param applicationId
     * @param creatorTaskId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "putDocumentAction")
    @WebResult(name = "DocumentId", targetNamespace = "")
    @RequestWrapper(localName = "putDocument", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.PutDocument")
    @ResponseWrapper(localName = "putDocumentResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.PutDocumentResponse")
    public String putDocument(
            @WebParam(name = "ApplicationId", targetNamespace = "")
                    String applicationId,
            @WebParam(name = "CreatorTaskId", targetNamespace = "")
                    String creatorTaskId,
            @WebParam(name = "BusinessDocumentId", targetNamespace = "")
                    String businessDocumentId,
            @WebParam(name = "Document", targetNamespace = "")
                    Document document);

    /**
     *
     * @param newDocument
     * @param documentId
     */
    @WebMethod(action = "updateDocumentAction")
    @RequestWrapper(localName = "updateDocument", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.UpdateDocument")
    @ResponseWrapper(localName = "updateDocumentResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.UpdateDocumentResponse")
    public void updateDocument(
            @WebParam(name = "DocumentId", targetNamespace = "", mode = WebParam.Mode.INOUT)
                    Holder<String> documentId,
            @WebParam(name = "NewDocument", targetNamespace = "")
                    Document newDocument);

    /**
     *
     * @param documentId
     * @return
     *     returns boolean
     */
    @WebMethod(action = "deleteDocumentAction")
    @WebResult(name = "Success", targetNamespace = "")
    @RequestWrapper(localName = "deleteDocument", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.DeleteDocument")
    @ResponseWrapper(localName = "deleteDocumentResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.DeleteDocumentResponse")
    public boolean deleteDocument(
            @WebParam(name = "DocumentId", targetNamespace = "")
                    String documentId);

    /**
     *
     * @param metadataList
     * @param applicationId
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "searchDocumentsAction")
    @WebResult(name = "DocumentIds", targetNamespace = "")
    @RequestWrapper(localName = "searchDocuments", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.SearchDocuments")
    @ResponseWrapper(localName = "searchDocumentsResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.SearchDocumentsResponse")
    public List<String> searchDocuments(
            @WebParam(name = "ApplicationId", targetNamespace = "")
                    String applicationId,
            @WebParam(name = "MetadataList", targetNamespace = "")
                    List<Metadata> metadataList);

    /**
     *
     * @param documentId
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "searchDocumentVersionsAction")
    @WebResult(name = "DocumentIds", targetNamespace = "")
    @RequestWrapper(localName = "searchDocumentVersions", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.SearchDocumentVersions")
    @ResponseWrapper(localName = "searchDocumentVersionsResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.SearchDocumentVersionsResponse")
    public List<String> searchDocumentVersions(
            @WebParam(name = "DocumentId", targetNamespace = "")
                    String documentId);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "isConnectedAction")
    @WebResult(name = "result", targetNamespace = "")
    @RequestWrapper(localName = "isConnected", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.IsConnected")
    @ResponseWrapper(localName = "isConnectedResponse", targetNamespace = "http://filenet.ws.metlife.cl/", className = "cl.blueprintsit.ws.filenet.IsConnectedResponse")
    public String isConnected();

}
